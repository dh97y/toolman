<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hzy.toolman.db.dao.common.TbHomeworkMapper">
  <resultMap id="BaseResultMap" type="com.hzy.toolman.db.domain.common.TbHomework">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="create_by" jdbcType="BIGINT" property="createBy" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="format" jdbcType="VARCHAR" property="format" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, `name`, url, `status`, create_date, update_date, create_by, remark, format
  </sql>
  <select id="selectByExample" parameterType="com.hzy.toolman.db.domain.common.TbHomeworkExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_homework
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    <if test="example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from tb_homework
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_homework
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from tb_homework
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tb_homework
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.hzy.toolman.db.domain.common.TbHomeworkExample">
    delete from tb_homework
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hzy.toolman.db.domain.common.TbHomework">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_homework (`name`, url, `status`, 
      create_date, update_date, create_by, 
      remark, format)
    values (#{name,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, 
      #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}, #{createBy,jdbcType=BIGINT}, 
      #{remark,jdbcType=VARCHAR}, #{format,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hzy.toolman.db.domain.common.TbHomework">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_homework
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        `name`,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="format != null">
        format,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=BIGINT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="format != null">
        #{format,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hzy.toolman.db.domain.common.TbHomeworkExample" resultType="java.lang.Long">
    select count(*) from tb_homework
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_homework
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.url != null">
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateDate != null">
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=BIGINT},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.format != null">
        format = #{record.format,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_homework
    set id = #{record.id,jdbcType=BIGINT},
      `name` = #{record.name,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      `status` = #{record.status,jdbcType=TINYINT},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      create_by = #{record.createBy,jdbcType=BIGINT},
      remark = #{record.remark,jdbcType=VARCHAR},
      format = #{record.format,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hzy.toolman.db.domain.common.TbHomework">
    update tb_homework
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=BIGINT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="format != null">
        format = #{format,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hzy.toolman.db.domain.common.TbHomework">
    update tb_homework
    set `name` = #{name,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=TINYINT},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=BIGINT},
      remark = #{remark,jdbcType=VARCHAR},
      format = #{format,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectOneByExample" parameterType="com.hzy.toolman.db.domain.common.TbHomeworkExample" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tb_homework
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from tb_homework
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>

  <!-- edit by hzy -->

  <select id="list" resultType="com.hzy.toolman.db.domain.common.TbHomework">
    SELECT
        th.id,
        th.name,
        th.url,
        th.status,
        th.create_date,
        th.update_date,
        th.create_by,
        th.remark,
        th.format
    FROM
        tb_homework th
    LEFT JOIN tb_classes_homework tch ON tch.homework_id = th.id
    <where>
      <if test="id != null">
        and th.id = #{id,jdbcType=BIGINT}
      </if>
      <if test="name != null">
        and th.name like concat(concat('%', #{name,jdbcType=VARCHAR}), '%')
      </if>
      <if test="url != null">
        and th.url = #{url,jdbcType=VARCHAR}
      </if>
      <if test="status != null">
        and th.status = #{status,jdbcType=TINYINT}
      </if>
      <if test="createDate != null">
        and th.create_date = #{createDate,jdbcType=TIMESTAMP}
      </if>
      <if test="updateDate != null">
        and th.update_date = #{updateDate,jdbcType=TIMESTAMP}
      </if>
      <if test="createBy != null">
        and th.create_by = #{createBy,jdbcType=BIGINT}
      </if>
      <if test="remark != null">
        and th.remark = #{remark,jdbcType=VARCHAR}
      </if>
      <if test="format != null">
        and th.format = #{formart,jdbcType=VARCHAR}
      </if>
      <if test="classesId != null">
        and tch.classes_id like concat(concat('%', #{classesId,jdbcType=BIGINT}), '%')
      </if>
    </where>
    order by th.id asc
    <if test="offset != null and limit != null">
      limit #{offset}, #{limit}
    </if>
  </select>

  <select id="count" resultType="java.lang.Integer">
    SELECT
        count(*)
    FROM
        tb_homework th
    LEFT JOIN tb_classes_homework tch ON tch.homework_id = th.id
    <where>
      <if test="id != null">
        and th.id = #{id,jdbcType=BIGINT}
      </if>
      <if test="name != null">
        and th.name like concat(concat('%', #{name,jdbcType=VARCHAR}), '%')
      </if>
      <if test="url != null">
        and th.url = #{url,jdbcType=VARCHAR}
      </if>
      <if test="status != null">
        and th.status = #{status,jdbcType=TINYINT}
      </if>
      <if test="createDate != null">
        and th.create_date = #{createDate,jdbcType=TIMESTAMP}
      </if>
      <if test="updateDate != null">
        and th.update_date = #{updateDate,jdbcType=TIMESTAMP}
      </if>
      <if test="createBy != null">
        and th.create_by = #{createBy,jdbcType=BIGINT}
      </if>
      <if test="remark != null">
        and th.remark = #{remark,jdbcType=VARCHAR}
      </if>
      <if test="format != null">
        and th.format = #{formart,jdbcType=VARCHAR}
      </if>
      <if test="classesId != null">
        and tch.classes_id like concat(concat('%', #{classesId,jdbcType=BIGINT}), '%')
      </if>
    </where>
  </select>

  <delete id="batchRemove">
    delete from tb_homework where id in
    <foreach collection="array" item="id" open="(" separator="," close=")">
      #{id}
    </foreach>
  </delete>

</mapper>